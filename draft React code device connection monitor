import React, { useState, useEffect } from 'react';
import { View, Text, Dimensions, ActivityIndicator, Alert } from 'react-native';
import NetInfo from '@react-native-community/netinfo';
import DeviceInfo from 'react-native-device-info';
import Geolocation from '@react-native-community/geolocation';

const ConnectivityMonitor = () => {
    const [networkState, setNetworkState] = useState(null);
    const [memoryInfo, setMemoryInfo] = useState(null);
    const [screenSize, setScreenSize] = useState(Dimensions.get('window'));
    const [location, setLocation] = useState(null);

    useEffect(() => {
        // Monitor Network Status
        const unsubscribe = NetInfo.addEventListener(state => {
            setNetworkState({
                type: state.type,
                isConnected: state.isConnected,
                downlink: state.details?.downlink || 'Unknown',
                strength: state.details?.strength || 'Unknown',
            });
        });

        // Get Memory Info
        DeviceInfo.getTotalMemory().then(memory => setMemoryInfo(memory));

        // Get User Movement & Connectivity Factors
        Geolocation.watchPosition(
            position => {
                setLocation({
                    latitude: position.coords.latitude,
                    longitude: position.coords.longitude,
                    speed: position.coords.speed,
                });
            },
            error => console.warn(error),
            { enableHighAccuracy: true, distanceFilter: 10 }
        );

        return () => unsubscribe();
    }, []);

    // Screen Size Handling
    useEffect(() => {
        const updateScreenSize = () => setScreenSize(Dimensions.get('window'));
        Dimensions.addEventListener('change', updateScreenSize);
        return () => Dimensions.removeEventListener('change', updateScreenSize);
    }, []);

    return (
        <View style={{ padding: 20 }}>
            <Text style={{ fontSize: 20, fontWeight: 'bold' }}>Connectivity & Device Monitor</Text>
            
            {/* Network Information */}
            {networkState ? (
                <View>
                    <Text>Network Type: {networkState.type}</Text>
                    <Text>Connected: {networkState.isConnected ? 'Yes' : 'No'}</Text>
                    <Text>Bandwidth: {networkState.downlink} Mbps</Text>
                    <Text>Signal Strength: {networkState.strength}</Text>
                </View>
            ) : <ActivityIndicator size="small" color="#0000ff" />}
            
            {/* Memory Info */}
            <Text>Total Memory: {memoryInfo ? (memoryInfo / (1024 * 1024 * 1024)).toFixed(2) + ' GB' : 'Fetching...'}</Text>
            
            {/* Screen Size Handling */}
            <Text>Screen Size: {screenSize.width} x {screenSize.height} px</Text>
            {screenSize.width < 600 && <Text style={{ color: 'red' }}>Warning: Data may be too large for this screen size.</Text>}
            
            {/* User Movement & Connectivity Prediction */}
            {location && (
                <View>
                    <Text>Current Speed: {location.speed} m/s</Text>
                    <Text>Latitude: {location.latitude}</Text>
                    <Text>Longitude: {location.longitude}</Text>
                </View>
            )}
        </View>
    );
};

export default ConnectivityMonitor;
