import React, { useEffect, useState } from "react";
import { Card, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";

const ConnectionVerifier = () => {
  const [connectionDetails, setConnectionDetails] = useState({
    ip: "",
    location: "",
    connectionType: "",
    deviceType: "",
    destinationUrl: "",
  });
  const [destination, setDestination] = useState("");

  const getConnectionDetails = async () => {
    try {
      // Get IP and location info
      const ipResponse = await fetch("https://ipapi.co/json/");
      const ipData = await ipResponse.json();

      // Get device and connection type
      const connection = navigator.connection || navigator.mozConnection || navigator.webkitConnection;
      const connectionType = connection ? connection.effectiveType : "Unknown";

      const userAgent = navigator.userAgent;
      const deviceType = /Mobile|Android|iP(hone|od|ad)/.test(userAgent) ? "Mobile" : "Desktop";

      setConnectionDetails({
        ip: ipData.ip,
        location: `${ipData.city}, ${ipData.region}, ${ipData.country_name}`,
        connectionType,
        deviceType,
        destinationUrl: destination,
      });
    } catch (error) {
      console.error("Error fetching connection details:", error);
    }
  };

  const handleCheck = () => {
    getConnectionDetails();
  };

  return (
    <div className="p-4 max-w-lg mx-auto">
      <Card>
        <CardContent>
          <h1 className="text-xl font-bold mb-4">Connection Verifier</h1>

          <div className="mb-4">
            <label className="block text-sm font-medium mb-2" htmlFor="destination">
              Enter Destination URL:
            </label>
            <input
              type="text"
              id="destination"
              value={destination}
              onChange={(e) => setDestination(e.target.value)}
              className="w-full px-3 py-2 border rounded-md"
              placeholder="https://example.com"
            />
          </div>

          <Button onClick={handleCheck} className="w-full mb-4">
            Verify Connection
          </Button>

          {connectionDetails.ip && (
            <div className="text-left">
              <p><strong>IP Address:</strong> {connectionDetails.ip}</p>
              <p><strong>Location:</strong> {connectionDetails.location}</p>
              <p><strong>Connection Type:</strong> {connectionDetails.connectionType}</p>
              <p><strong>Device Type:</strong> {connectionDetails.deviceType}</p>
              <p><strong>Destination URL:</strong> {connectionDetails.destinationUrl}</p>
            </div>
          )}
        </CardContent>
      </Card>
    </div>
  );
};

export default ConnectionVerifier;
